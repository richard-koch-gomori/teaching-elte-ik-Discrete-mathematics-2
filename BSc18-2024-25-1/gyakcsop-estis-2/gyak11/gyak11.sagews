︠2b687aab-4833-410b-9e0e-ca925cc2f154s︠
# gyak11

# fel2

def SSS_secret_pieces_from_primenum_and_coeffs(num_of_people, secret, primenum, coeff):
    coeff_list = coeff
    coeff_list.append(secret)
    #print(coeff_list)
    coeff_list.reverse()
    #print(coeff_list)
    poly = GF(primenum)['x'](coeff_list)
    secret_pieces = [(x, poly(x)) for x in [1..num_of_people]]
    return secret_pieces

SSS_secret_pieces_from_primenum_and_coeffs(4, 5, 7, [3, 4])


︡246e4de2-2772-4a02-a9c8-48a912c0b714︡{"stdout":"[(1, 5), (2, 4), (3, 2), (4, 6)]"}︡{"stdout":"\n"}︡{"done":true}
︠84655139-c18f-492c-a2e9-bcad30f462bfs︠
︡68a4c663-217c-44fe-ab15-a62609a3989c︡{"done":true}
︠217ac775-4262-4748-8063-7d3702e0e18es︠

GF(7)['x']([1, 2, 3])
︡be001dbc-8232-41c7-b58d-8dff1b758180︡{"stdout":"3*x^2 + 2*x + 1"}︡{"stdout":"\n"}︡{"done":true}
︠5c9aa411-34ad-4758-8a36-426ff9ec60a4s︠

# fel3


def SSS_compute_secret(primenum, secret_pieces):
    return GF(primenum)['x'].lagrange_polynomial(secret_pieces)(0)

SSS_compute_secret(7, [(1, 5), (3, 2), (4, 6)])
︡7f467c8a-1a9c-4602-b163-66aae5502af2︡{"stdout":"5\n"}︡{"done":true}
︠b64de49d-27cc-4274-af36-31aea7c86a14s︠



SSS_secret_pieces_from_primenum_and_coeffs(10, 20, 2017, [1, 2, 3])
︡908fb5e4-b7c8-409d-985a-c23594c04fa4︡{"stdout":"[(1, 26), (2, 42), (3, 74), (4, 128), (5, 210), (6, 326), (7, 482), (8, 684), (9, 938), (10, 1250)]\n"}︡{"done":true}
︠56b74027-6d3b-4649-abbd-b56ca9c0f3d8s︠

SSS_compute_secret(2017, [(2, 42), (3, 74), (4, 128)])
︡3f3729c3-e54c-4aa6-96c5-117fcf2b00ef︡{"stdout":"44\n"}︡{"done":true}
︠b72128e1-c49e-4e4d-b026-370002878355s︠

SSS_compute_secret(2017, [(2, 42), (3, 74), (4, 128), (7, 482)])
︡28da769b-b3ad-4611-a41c-02a5249ac1f4︡{"stdout":"20\n"}︡{"done":true}
︠627cbe8e-ddf5-4c4d-8651-eba837e9b3fbs︠

SSS_compute_secret(2017, [(2, 42), (3, 74), (4, 128), (7, 482), (9, 938), (10, 1250)])
︡df1bb1a4-10ab-41ff-9f73-1c9d84697dca︡{"stdout":"20\n"}︡{"done":true}
︠b02a34f8-dd8d-46f3-b575-2f2f1a840b60s︠


def Convert_String_to_Num256(string):
    idx = 0
    res = 0
    rev_string = list(string)
    rev_string.reverse()
    for ch in rev_string:
        #print(ch)
        res += ord(ch) * 256^idx
        idx += 1

    return res

def Convert_Num256_to_String(num):
    res = list()

    while num > 0:
        res.append(chr(num % 256)) # Integer(num % 256))
        num = num // 256

    res.reverse()
    return "".join(res)

︡b02dc8fa-2fb4-4898-be35-e1d4d452a20d︡{"done":true}
︠0e382db0-b3b8-4ae0-91a0-778ddad7c815︠

# fel5

def SSS_secret_pieces(required_num_of_people, num_of_people, secret):
    if required_num_of_people > num_of_people:
        raise ValueError("Invalid required_num_of_people num_of_people")

    secretNum = Convert_String_to_Num256(secret)
    #print(secretNum)
    primenum = next_prime(randint(1, 10) * max(secretNum, num_of_people))
    #print(primenum)
    coeff = [randint(1, primenum - 1) for i in [1..required_num_of_people - 1]]
    #print(coeff)
    return primenum, SSS_secret_pieces_from_primenum_and_coeffs(num_of_people, secretNum, primenum, coeff)



SSS_secret_pieces(3, 4, "helloworld")
︡12c8917d-21ed-4337-932b-41a2e9cef0f2︡{"stdout":"(1971988192447600437866947, [(1, 415881591130447909601630), (2, 1527321899825584782234801), (3, 1855329781749710289499290), (4, 1399905236902824431395097)])\n"}︡{"done":true}
︠cac2fbdf-6a6f-40fa-9973-a9bd85263fd6s︠

SSS_compute_secret(1971988192447600437866947, [(1, 415881591130447909601630), (2, 1527321899825584782234801), (3, 1855329781749710289499290)])
︡0577b6a6-4489-47d0-9566-edc5a09f3a7b︡{"stdout":"492997048111900109466724\n"}︡{"done":true}
︠4925a4b6-23db-4edb-a92e-d2dea936a23cs︠

Convert_Num256_to_String(492997048111900109466724)
︡fa839f1a-3f6a-4bbe-a39c-6d5a02e5a252︡{"stdout":"'helloworld'\n"}︡{"done":true}
︠38cdd898-a8b4-4c3a-aeb4-a7e014a3375es︠

SSS_compute_secret(1971988192447600437866947, [(2, 1527321899825584782234801), (3, 1855329781749710289499290)])

︡b36e0ec4-497b-4bab-ae86-9ad7c44d70ff︡{"stdout":"871306135977333767705823\n"}︡{"done":true}
︠8a6df684-4b90-4ce2-afb8-9629f889769cs︠

Convert_Num256_to_String(871306135977333767705823)

︡a028cc3e-1e60-4dc4-a1e0-402ea3134723︡{"stdout":"'¸\\x81\\x99«µ\\xa0¬¢\\x94ß'\n"}︡{"done":true}
︠ac4884af-58b2-4269-9504-eb2486248624s︠







# fel6



password = "34fg__#Gfb34226fdsWWQl36lII234i<!%fGZjsdJFEBD77467effO+36{}__IOQsFF&363&ZzOO053"

SSS_secret_pieces(7, 10, password)
︡6bd00cc1-f711-4048-af4b-9921c11a785a︡{"stdout":"(17823665338678595358233436430955016888049393623432027406689414491945081867280232531615384394639309135883931409503059112445059147960775396595229868433417655917672332790823940382109210787253611, [(1, 13077435240444923221595610394026009366442399538253561862454461813145552417829975967633037247097702489813931006395445229171328166034804815296930267982138539438567316645822230391815993812948554), (2, 1837619759853008954312574493828531803239242781406491320389610059728245828758635626237155735017172985617128333213227198775535692870897303649563008865005763829699460805677052230803194127006995), (3, 841155369577650458819146897602952171396985480373311448732841485083667580463605336637120275416783825581323062512627641635121409328750639891639549972227250330217334042054077677828593843436706), (4, 16367898343333838455774788309418612505205959211210722069811282241222657008157613552253633917647258540753776573043635826767255921719650500613647619925029507458794502876402084398418668310786061), (5, 3305365712517640991356772090884354892083652822592705051273840438330416226227697151146971049709652060836487704274856426342715561290110093509848060368480836600153967465928206497431281297075922), (6, 8368792284012967550580133124286423638869550283553730942673889463628904534708116379278424148484279456491260602138279078644913396363053865291824118801044312350133718520084170816787087062585154), (7, 1978607303899261817754862637604274124847775823521732451436273683474322397476746557697262402897108376481271471808925433501442143826989259416392848491849703108002563662657976355733579434839208), (8, 4799952282132365264017187643874862535176929561329776585648729254822468479702852628576271627760125799702802160623383503320140010639530007865694142221884633116885538127484989805354954652424546), (9, 9881610495197881531398714928164943609344092167109668076374114271599677460699735654865112418385023297357061105051574171268023322443559852313021083713410620257473581644708126498269885934527800), (10, 3396658924273162703401858908386663501482690155411949993203494609045730365946204311023031254838456115288925603273754768159091454629218436793299380115704140195447138961594103269373793159511052)])"}︡{"stdout":"\n"}︡{"done":true}
︠d695398c-c70a-4194-8a28-00be0313ae36s︠


SSS_compute_secret(17823665338678595358233436430955016888049393623432027406689414491945081867280232531615384394639309135883931409503059112445059147960775396595229868433417655917672332790823940382109210787253611, [(2, 1837619759853008954312574493828531803239242781406491320389610059728245828758635626237155735017172985617128333213227198775535692870897303649563008865005763829699460805677052230803194127006995), (3, 841155369577650458819146897602952171396985480373311448732841485083667580463605336637120275416783825581323062512627641635121409328750639891639549972227250330217334042054077677828593843436706), (4, 16367898343333838455774788309418612505205959211210722069811282241222657008157613552253633917647258540753776573043635826767255921719650500613647619925029507458794502876402084398418668310786061), (5, 3305365712517640991356772090884354892083652822592705051273840438330416226227697151146971049709652060836487704274856426342715561290110093509848060368480836600153967465928206497431281297075922), (6, 8368792284012967550580133124286423638869550283553730942673889463628904534708116379278424148484279456491260602138279078644913396363053865291824118801044312350133718520084170816787087062585154), (7, 1978607303899261817754862637604274124847775823521732451436273683474322397476746557697262402897108376481271471808925433501442143826989259416392848491849703108002563662657976355733579434839208), (8, 4799952282132365264017187643874862535176929561329776585648729254822468479702852628576271627760125799702802160623383503320140010639530007865694142221884633116885538127484989805354954652424546)])
︡cecf20fe-b7c0-4d38-a439-e06481e40f3b︡{"stdout":"3564733067735719071646687286191003377609878724686405481337882898389016373456046506323076878927861827176786281900611822489011829592155079319045973686683531183534466558164788076421842157450547\n"}︡{"done":true}
︠886dc5cb-c8c8-4b6a-9561-3b009acc2323s︠


password_computed = Convert_Num256_to_String(3564733067735719071646687286191003377609878724686405481337882898389016373456046506323076878927861827176786281900611822489011829592155079319045973686683531183534466558164788076421842157450547)
print(password_computed)
︡67de1180-fa97-45d7-83c6-d34536200fdf︡{"stdout":"34fg__#Gfb34226fdsWWQl36lII234i<!%fGZjsdJFEBD77467effO+36{}__IOQsFF&363&ZzOO053\n"}︡{"done":true}
︠f4a0665b-672f-4055-9d90-8649d8e3d8c5s︠

password_computed == password
︡0cde3e68-e95f-479a-9fca-f22f671f3a46︡{"stdout":"True\n"}︡{"done":true}
︠0803b547-05eb-4496-a01e-b1e785f5f4c9︠









